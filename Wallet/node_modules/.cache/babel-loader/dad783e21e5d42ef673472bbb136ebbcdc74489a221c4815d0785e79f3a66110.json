{"ast":null,"code":"var _jsxFileName = \"/Users/yuuj72/bithumb/team/BTAFinalProject-01/Wallet/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport * as ReactDOM from 'react-dom';\nimport { goBack, goTo, popToTop, Link, Router, getCurrent, getComponentStack } from 'react-chrome-extension-router';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Content from \"./pages/Content\";\nimport Login from \"./pages/Login\";\nimport Nav from \"./components/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  useEffect(() => {\n    const {\n      component,\n      props\n    } = getCurrent();\n    console.log(component ? `There is a component on the stack! ${component} with ${props}` : `The current stack is empty so Router's direct children will be rendered`);\n    const components = getComponentStack();\n    console.log(`The stack has ${components.length} components on the stack`);\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","goBack","goTo","popToTop","Link","Router","getCurrent","getComponentStack","Navbar","Home","Content","Login","Nav","App","component","props","console","log","components","length"],"sources":["/Users/yuuj72/bithumb/team/BTAFinalProject-01/Wallet/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport * as ReactDOM from 'react-dom';\nimport {\n  goBack,\n  goTo,\n  popToTop,\n  Link,\n  Router,\n  getCurrent,\n  getComponentStack,\n} from 'react-chrome-extension-router';\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Content from \"./pages/Content\";\nimport Login from \"./pages/Login\";\nimport Nav from \"./components/Nav\";\n\nconst App = () => {\n  useEffect(() => {\n    const { component, props } = getCurrent();\n    console.log(\n      component\n        ? `There is a component on the stack! ${component} with ${props}`\n        : `The current stack is empty so Router's direct children will be rendered`\n    );\n    const components = getComponentStack();\n    console.log(`The stack has ${components.length} components on the stack`);\n});\n\n  return (\n    \n    <Router>\n       {/* <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/content\" element={<Content />} />\n            <Route path=\"/login\" element={<Login />} />\n        </Routes> */}\n      {/* <Navbar /> */}\n      <Nav />\n      <Home />\n      {/* <Login />\n      <Content /> */}\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAO,KAAKC,QAAQ,MAAM,WAAW;AACrC,SACEC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,iBAAiB,QACZ,+BAA+B;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,GAAG,MAAM,kBAAkB;AAAC;AAEnC,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChBf,SAAS,CAAC,MAAM;IACd,MAAM;MAAEgB,SAAS;MAAEC;IAAM,CAAC,GAAGT,UAAU,EAAE;IACzCU,OAAO,CAACC,GAAG,CACTH,SAAS,GACJ,sCAAqCA,SAAU,SAAQC,KAAM,EAAC,GAC9D,yEAAwE,CAC9E;IACD,MAAMG,UAAU,GAAGX,iBAAiB,EAAE;IACtCS,OAAO,CAACC,GAAG,CAAE,iBAAgBC,UAAU,CAACC,MAAO,0BAAyB,CAAC;EAC7E,CAAC,CAAC;EAEA,oBAEE,QAAC,MAAM;IAAA,wBAOL,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAGD;AAEb,CAAC;AAAC,GA3BIN,GAAG;AAAA,KAAHA,GAAG;AA6BT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}